/dts-v1/;
#include <freq.h>
#include <atmel/samd21.dtsi>
#include <atmel/samx2xx18.dtsi>
#include "nxg_court.dtsi"
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
	model = "NxG Court";
	compatible = "nxg,court", "atmel,samd21g18a", "atmel,samd21";

	chosen {
		zephyr,console = &sercom0;
		zephyr,shell-uart = &sercom0;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
	};

	aliases {
		led0 = &led0;
		led1 = &led1;
		led2 = &led2;
		pwm-led0 = &pwm_led0;
		pwm-led2 = &pwm_led2;
		sw0 = &push_button;
		i2c-0 = &sercom1;
	};

	leds: leds {
		compatible = "gpio-leds";
		led0: led_0 {
			gpios = <&porta 19 GPIO_ACTIVE_LOW>;
			label = "Red LED";
		};
		led1: led_1 {
			gpios = <&porta 14 GPIO_ACTIVE_LOW>;
			label = "Yellow LED";
		};
		led2: led_2 {
			gpios = <&porta 18 GPIO_ACTIVE_HIGH>;
			label = "Green LED";
		};
	};
	vcc {
		compatible = "gpio-leds";
		vcc_sensor: vcc_sensor {
			gpios = <&porta 25 GPIO_ACTIVE_LOW>;
		};
		vcc_sd: vcc_sd {
			gpios = <&portb 02 GPIO_ACTIVE_LOW>;
		};
	};
	zephyr,user {
		cs-gpios = <&portb 22 GPIO_ACTIVE_LOW>;
	};

	pwmleds: pwmleds {
		compatible = "pwm-leds";
		pwm_led0: pwm_led_0 {
			pwms = <&tcc0 3 PWM_MSEC(20)>; // Need to invert polarity, but samd21 doesn't support it
		};
		pwm_led2: pwm_led_2 {
			pwms = <&tcc0 2 PWM_MSEC(20)>;
		};
	};

	buttons {
		compatible = "gpio-keys";
		push_button: button_0 {
			gpios = <&portb 23 (GPIO_PULL_UP | GPIO_ACTIVE_HIGH)>;
			label = "Push Button";
			zephyr,code = <INPUT_KEY_0>;
		};
	};
};

&cpu0 {
	clock-frequency = <DT_FREQ_M(48)>;
};

&tcc0 {
	status = "okay";
	compatible = "atmel,sam0-tcc-pwm";
	/* Gives a maximum period of 1.4s */
	prescaler = <4>;
	#pwm-cells = <2>;

	pinctrl-0 = <&pwm_default>;
	pinctrl-names = "default";
};

&rtc {
	status = "okay";
	counter-mode = "clock";
	prescaler = <1024>;
};

&sercom0 {
	status = "okay";
	compatible = "atmel,sam0-uart";
	current-speed = <115200>;
	rxpo = <1>;
	txpo = <0>;

	pinctrl-0 = <&sercom0_uart_default>;
	pinctrl-names = "default";
};

&sercom1 {
	status = "okay";
	compatible = "atmel,sam0-i2c";
	clock-frequency = <I2C_BITRATE_STANDARD>;
	#address-cells = <1>;
	#size-cells = <0>;

	pinctrl-0 = <&sercom1_i2c_default>;
	pinctrl-names = "default";

	lum_sensor: lum_sensor@10 {
		compatible = "i2c-device";
		label = "Light sensor";
		reg = <0x10>;
	};
	temp_sensor: temp_sensor@44 {
		compatible = "i2c-device";
		label = "Temperature/Humidity sensor";
		reg = <0x44>;
	};
};

&sercom2 {
	status = "disabled";
	compatible = "atmel,sam0-i2c";
	clock-frequency = <I2C_BITRATE_FAST>;
	#address-cells = <1>;
	#size-cells = <0>;

	pinctrl-0 = <&sercom2_i2c_default>;
	pinctrl-names = "default";
};

&sercom3 {
	status = "disabled";
	compatible = "atmel,sam0-uart";
	current-speed = <115200>;
	rxpo = <1>;
	txpo = <0>;

	pinctrl-0 = <&sercom3_uart_default>;
	pinctrl-names = "default";
};

&sercom4 {
	status = "okay";
	compatible = "atmel,sam0-spi";
	dipo = <3>;
	dopo = <0>;
	#address-cells = <1>;
	#size-cells = <0>;

	pinctrl-0 = <&sercom4_spi_default>;
	pinctrl-names = "default";
	// cs-gpios = <&portb 22 GPIO_ACTIVE_LOW>;

	sd_card: sd_card@0 {
		compatible = "zephyr,sdhc-spi-slot";
		label = "SD Card Spi";
		reg = <0>;
		status = "okay";
		mmc {
			compatible = "zephyr,sdmmc-disk";
			disk-name = "SD";
			status = "okay";
		};
		spi-max-frequency = <5000000>;
	};
};

&sercom5 {
	status = "disabled";
	compatible = "atmel,sam0-spi";
	dipo = <0>;
	dopo = <2>;
	#address-cells = <1>;
	#size-cells = <0>;

	pinctrl-0 = <&sercom5_spi_default>;
	pinctrl-names = "default";
};

zephyr_udc0: &usb0 {
	status = "okay";

	pinctrl-0 = <&usb_dc_default>;
	pinctrl-names = "default";
};
