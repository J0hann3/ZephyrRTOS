/*
* File generated by the script 'C:\Users\JohanneVIGNY\ZephyrRTOS\common\SystemView\generate_sysview_file.py'.
* Do not modify it.
* Modify the json configuration if wanted, then regenerate this file with the script.
*
* File    : SEGGER_SYSVIEW_Conf.g.h
* Purpose : SEGGER SystemView configuration file.
* 
* In the file SYSVIEW_Config.h add the following:
*   #include "SEGGER_SYSVIEW_Conf.g.h"
* 
* And define the symbol 'SEGGER_SYSTEM_VIEW'
* 
* To record an event, use the following function:
* #include <SEGGER_SYSVIEW.h>
*   DEBUG_SEGGER_SYSVIEW_RecordXX(ID_SYSVIEW_FUNCTION, XX, XX) => Where XX represents  the number or type of arguments
*  to pass to SystemView, according to its definition in the .json files.
* Or:
*   DEBUG_SEGGER_SYSVIEW_RecordEndCallXX(ID_SYSVIEW_FUNCTION, XX) => Should be called to specify the end
*  of the event that was recorded.
* 
* You can also use the following macros:
*   record_sysview_function(XX); => if it takes arguments add as many as needed
* Where 'function' is the name of the function ID
* Function that have an enter and exit description must be call like this:
*   record_sysview_function_enter(XX) or record_sysview_function_exit()
* 
* Pass NamedType value to DEBUG_SEGGER_SYSVIEW_RecordXX(ID, TYPE_SYSVIEW_xx) if the ID_SYSVIEW takes
*  NamedType in arguments. 
*/

#ifndef SEGGER_SYSVIEW_CONF_G_H
#define SEGGER_SYSVIEW_CONF_G_H

//
// Define Sysview NamedType to record events. 
//

// NamedType B
#define TYPE_SYSVIEW_B_FALSE 0
#define TYPE_SYSVIEW_B_TRUE 1

// NamedType Bool
#define TYPE_SYSVIEW_BOOL_FALSE 0
#define TYPE_SYSVIEW_BOOL_TRUE 1

// NamedType Bo
#define TYPE_SYSVIEW_BO_FALSE 0
#define TYPE_SYSVIEW_BO_TRUE 1

// NamedType Boo
#define TYPE_SYSVIEW_BOO_FALSE 0
#define TYPE_SYSVIEW_BOO_TRUE 1

// NamedType OSError
#define TYPE_SYSVIEW_OSERROR_SUCCESS 0
#define TYPE_SYSVIEW_OSERROR_ERROR 1

// NamedType WorkQueueError
#define TYPE_SYSVIEW_WORKQUEUEERROR_NO_ERROR 0
#define TYPE_SYSVIEW_WORKQUEUEERROR_OVERFLOW 1
#define TYPE_SYSVIEW_WORKQUEUEERROR_NULL_WORKER_POINTER 2

//
// Define Sysview function ID to record events.
//
#define ID_SYSVIEW_SYCALL 32       //FunctionName=%Bol
#define ID_SYSVIEW_DELAY_MS 33       //msec=%s ms | Returns %u
#define ID_SYSVIEW_CONFIG_LIGHT_SENSOR 34       //config= %u, %u, %u | Returns %u
#define ID_SYSVIEW_MEASURE_LIGHT 35       //Start measure | Returns %u
#define ID_SYSVIEW_MEASURE_TEMP 36       //Start measure | Returns %u
#define ID_SYSVIEW_MEASURE_LOGGER_WRITE 37       //
#define ID_SYSVIEW_SD_CARD_DETECTED 38       //isDetected=%Bool
#define ID_SYSVIEW_OPEN_SD_CARD 39       // | Returns %u
#define ID_SYSVIEW_CLOSE_SD_CARD 40       //
#define ID_SYSVIEW_MOUNT_SD_CARD 41       //
#define ID_SYSVIEW_UNMOUNT_SD_CARD 42       //
#define ID_SYSVIEW_SLEEP_SD_CARD 43       //
#define ID_SYSVIEW_WAKE_UP_SD_CARD 44       //
#define ID_SYSVIEW_WRITE_SD_CARD 45       //
#define ID_SYSVIEW_WORK_QUEUE_INIT 46       //
#define ID_SYSVIEW_WORK_QUEUE_ENQUEUE 47       //%d / %d
#define ID_SYSVIEW_WORK_QUEUE_PROCESS 48       //
#define ID_SYSVIEW_WORK_QUEUE_IS_NOT_EMPTY 49       //Is not Empty: %d
#define ID_SYSVIEW_WORK_QUEUE_ERROR 50       //Error: %WorkQueueError

//
// Define Sysview macro functions to record events.
//
#ifdef SEGGER_SYSTEM_VIEW

#define record_sysview_sycall(int0) SEGGER_SYSVIEW_RecordU32(ID_SYSVIEW_SYCALL, int0)       // SystenView function: 'sycall', description: 'FunctionName=%Bol'
#define record_sysview_delay_ms_enter(str0) SEGGER_SYSVIEW_RecordString(ID_SYSVIEW_DELAY_MS, str0)       // SystenView function: 'delay_ms', description: 'msec=%s ms'
#define record_sysview_delay_ms_exit(int0) SEGGER_SYSVIEW_RecordEndCallU32(ID_SYSVIEW_DELAY_MS, int0)       // SystemView function: 'delay_ms', return description: 'Returns %u'
#define record_sysview_config_light_sensor_enter(int0, int1, int2) SEGGER_SYSVIEW_RecordU32x3(ID_SYSVIEW_CONFIG_LIGHT_SENSOR, int0, int1, int2)       // SystenView function: 'config_light_sensor', description: 'config= %u, %u, %u'
#define record_sysview_config_light_sensor_exit(int0) SEGGER_SYSVIEW_RecordEndCallU32(ID_SYSVIEW_CONFIG_LIGHT_SENSOR, int0)       // SystemView function: 'config_light_sensor', return description: 'Returns %u'
#define record_sysview_measure_light_enter() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_MEASURE_LIGHT)       // SystenView function: 'measure_light', description: 'Start measure'
#define record_sysview_measure_light_exit(int0) SEGGER_SYSVIEW_RecordEndCallU32(ID_SYSVIEW_MEASURE_LIGHT, int0)       // SystemView function: 'measure_light', return description: 'Returns %u'
#define record_sysview_measure_temp_enter() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_MEASURE_TEMP)       // SystenView function: 'measure_temp', description: 'Start measure'
#define record_sysview_measure_temp_exit(int0) SEGGER_SYSVIEW_RecordEndCallU32(ID_SYSVIEW_MEASURE_TEMP, int0)       // SystemView function: 'measure_temp', return description: 'Returns %u'
#define record_sysview_measure_logger_write() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_MEASURE_LOGGER_WRITE)     //SystenView function: 'measure_logger_write', no description
#define record_sysview_sd_card_detected(int0) SEGGER_SYSVIEW_RecordU32(ID_SYSVIEW_SD_CARD_DETECTED, int0)       // SystenView function: 'sd_card_detected', description: 'isDetected=%Bool'
#define record_sysview_open_sd_card_enter() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_OPEN_SD_CARD)     //SystenView function: 'open_sd_card', no description
#define record_sysview_open_sd_card_exit(int0) SEGGER_SYSVIEW_RecordEndCallU32(ID_SYSVIEW_OPEN_SD_CARD, int0)       // SystemView function: 'open_sd_card', return description: 'Returns %u'
#define record_sysview_close_sd_card() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_CLOSE_SD_CARD)     //SystenView function: 'close_sd_card', no description
#define record_sysview_mount_sd_card() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_MOUNT_SD_CARD)     //SystenView function: 'mount_sd_card', no description
#define record_sysview_unmount_sd_card() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_UNMOUNT_SD_CARD)     //SystenView function: 'unmount_sd_card', no description
#define record_sysview_sleep_sd_card() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_SLEEP_SD_CARD)     //SystenView function: 'sleep_sd_card', no description
#define record_sysview_wake_up_sd_card() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_WAKE_UP_SD_CARD)     //SystenView function: 'wake_up_sd_card', no description
#define record_sysview_write_sd_card() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_WRITE_SD_CARD)     //SystenView function: 'write_sd_card', no description
#define record_sysview_work_queue_init() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_WORK_QUEUE_INIT)     //SystenView function: 'work_queue_init', no description
#define record_sysview_work_queue_enqueue(int0, int1) SEGGER_SYSVIEW_RecordU32x2(ID_SYSVIEW_WORK_QUEUE_ENQUEUE, int0, int1)       // SystenView function: 'work_queue_enqueue', description: '%d / %d'
#define record_sysview_work_queue_process() SEGGER_SYSVIEW_RecordVoid(ID_SYSVIEW_WORK_QUEUE_PROCESS)     //SystenView function: 'work_queue_process', no description
#define record_sysview_work_queue_is_not_empty(int0) SEGGER_SYSVIEW_RecordU32(ID_SYSVIEW_WORK_QUEUE_IS_NOT_EMPTY, int0)       // SystenView function: 'work_queue_is_not_empty', description: 'Is not Empty: %d'
#define record_sysview_work_queue_error(int0) SEGGER_SYSVIEW_RecordU32(ID_SYSVIEW_WORK_QUEUE_ERROR, int0)       // SystenView function: 'work_queue_error', description: 'Error: %WorkQueueError'

#else // define SEGGER_SYSTEM_VIEW

#define record_sysview_sycall(int0)
#define record_sysview_delay_ms_enter(str0)
#define record_sysview_delay_ms_exit(int0)
#define record_sysview_config_light_sensor_enter(int0, int1, int2)
#define record_sysview_config_light_sensor_exit(int0)
#define record_sysview_measure_light_enter()
#define record_sysview_measure_light_exit(int0)
#define record_sysview_measure_temp_enter()
#define record_sysview_measure_temp_exit(int0)
#define record_sysview_measure_logger_write()
#define record_sysview_sd_card_detected(int0)
#define record_sysview_open_sd_card_enter()
#define record_sysview_open_sd_card_exit(int0)
#define record_sysview_close_sd_card()
#define record_sysview_mount_sd_card()
#define record_sysview_unmount_sd_card()
#define record_sysview_sleep_sd_card()
#define record_sysview_wake_up_sd_card()
#define record_sysview_write_sd_card()
#define record_sysview_work_queue_init()
#define record_sysview_work_queue_enqueue(int0, int1)
#define record_sysview_work_queue_process()
#define record_sysview_work_queue_is_not_empty(int0)
#define record_sysview_work_queue_error(int0)

#endif // not define SEGGER_SYSTEM_VIEW

#endif  // SEGGER_SYSVIEW_CONF_G_H
